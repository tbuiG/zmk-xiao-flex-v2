/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE     &kp N1        &kp N2        &kp N3  &kp N4      &kp N5          &kp N6             &kp N7           &kp N8         &kp N9    &kp N0    &kp MINUS
&kp TAB       &kp Q         &kp W         &kp E   &kp R       &kp T           &kp Y              &kp U            &kp I          &kp O     &kp P     &kp BSLH
&kp CAPSLOCK  &kp A         &kp S         &kp D   &kp F       &kp G           &kp H              &kp J            &kp K          &kp L     &kp SEMI  &kp SQT
&kp LSHFT     &kp Z         &kp X         &kp C   &kp V       &kp B           &kp N              &kp M            &kp COMMA      &kp DOT   &kp FSLH  &kp EQUAL
              &kp LEFT_ALT  &kp LEFT_GUI  &mo 2   &kp END                                        &kp PG_UP        &kp PAGE_DOWN  &kp LBKT  &kp RBKT
                                                  &kp DELETE  &kp ESCAPE                         &kp C_VOLUME_UP  &kp C_MUTE
                                          &mo 1   &kp SPACE   &kp LEFT_ALT    &kp C_VOLUME_DOWN  &kp BACKSPACE    &kp ENTER
                                                              &kp LCTRL       &kp HOME
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        arrow_layer {
            bindings = <
&kp F1  &kp F2        &kp F3  &kp F4  &kp F5  &kp F6       &kp F7             &kp F8          &kp F9                &kp F10                &kp F11          &kp F12
&trans  &trans        &trans  &trans  &trans  &trans       &trans             &trans          &kp UP                &trans                 &trans           &kp RA(F4)
&trans  &trans        &trans  &trans  &trans  &trans       &kp QUESTION       &kp LEFT_ARROW  &kp DOWN              &kp RIGHT              &trans           &trans
&trans  &trans        &trans  &trans  &trans  &trans       &kp DOUBLE_QUOTES  &kp SLASH       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans           &trans
        &kp LEFT_ALT  &trans  &trans  &trans                                  &kp COLON       &kp EQUAL             &kp LEFT_BRACE         &kp RIGHT_BRACE
                                      &trans  &trans                          &trans          &trans
                              &trans  &trans  &trans       &trans             &kp LC(LS(T))   &kp LC(LS(P))
                                              &kp RCTRL    &kp LA(F4)
            >;
        };

        number_layer {
            bindings = <
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans           &kp KP_NUMLOCK   &kp KP_EQUAL  &kp KP_DIVIDE  &kp ASTERISK  &trans
&bt BT_CLR_ALL  &trans        &trans        &trans        &trans        &trans          &trans           &kp N7           &kp N8        &kp N9         &kp KP_MINUS  &trans
&trans          &trans        &trans        &trans        &trans        &trans          &kp PERIOD       &kp N4           &kp N5        &kp N6         &kp KP_PLUS   &trans
&trans          &trans        &trans        &trans        &trans        &trans          &kp KP_NUMBER_0  &kp N1           &kp N2        &kp N3         &kp RET       &trans
                &trans        &trans        &trans        &trans                                         &kp KP_NUMBER_0  &kp PERIOD    &kp DOWN       &kp RIGHT
                                                          &trans        &bootloader                      &trans           &trans
                                            &out OUT_TOG  &trans        &sys_reset      &trans           &trans           &trans
                                                                        &trans          &trans
            >;
        };
    };
};
